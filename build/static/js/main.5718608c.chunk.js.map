{"version":3,"sources":["components/PageSplitter.js","components/CardHeader.js","components/CustomCard.js","components/Footer.js","pages/Dashboard.js","pages/Form.js","components/Dcard.js","components/DCinfo.js","components/CurrBooking.js","pages/Details.js","App.js","serviceWorker.js","index.js"],"names":["PageSplitter","style","fontSize","marginLeft","Divider","marginTop","CardHead","class","marginRight","CustomCard","props","history","useHistory","url","name","color","available","seats","rent","btncolor","Box","mx","mt","ml","mr","Container","Grid","container","spacing","alignItems","item","alt","src","direction","fontWeight","Button","variant","disabled","backgroundColor","onClick","push","pathname","state","carprops","Footer","Item","Dashboard","list_cars","location","bookings_list","booking","i","length","car_name","j","map","vehicle_no","fuel_type","dis","Form","useState","Date","selectedDate","setSelectedDate","selectedRDate","setSelectedRDate","phoneNumber","setPhoneNumber","setName","top","left","transform","modalStyle","open","setOpen","handleClose","classes","makeStyles","theme","paper","position","width","palette","background","border","boxShadow","shadows","padding","useStyles","Modal","onClose","aria-labelledby","aria-describedby","disableBackdropClick","id","getDate","getMonth","getYear","list_months","issuedate","returndate","dictionary","justify","whiteSpace","display","action","TextField","required","label","placeholder","value","onChange","event","handleNameChange","target","defaultCountry","onlyCountries","regions","handlePhoneChange","utils","DateFnsUtils","margin","autoOk","format","KeyboardButtonProps","date","href","alert","isAfter","Dcard","avail_text","borderRadius","Paper","DCinfo","Icon","endIcon","CurrBooking","Name","Phone","phone","Idate","Rdate","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","key","component","scope","Details","phone_no","issue_date","return_date","cname","match","App","exact","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5718608c.chunk.js","sourcesContent":["import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nconst PageSplitter = () =>{\n        return (\n            <div>\n                <span style={{ fontSize: \"4vh\", marginLeft: \"3vw\" }}>\n                    Cars for rent\n                </span >\n                <Divider style={{ marginTop: \"3vh\" }} />\n            </div>\n        );\n\n}\nexport default PageSplitter","import React from \"react\";\n\nconst CardHead = () => {\n    return (\n        <div class=\"cardheader\">\n            <span style={{ marginRight: \"20vw\" }}>\n                Car Details\n                </span>\n            <span style={{ marginRight: \"7vw\" }}>\n                RENT PER DAY\n                </span>\n        </div>\n    );\n}\nexport default CardHead","import React from \"react\";\nimport { Container, Grid, Box } from \"@material-ui/core\";\nimport Colorize from \"@material-ui/icons/Colorize\";\nimport AirlineSeatReclineNormalIcon from \"@material-ui/icons/AirlineSeatReclineNormal\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst CustomCard = (props) => {\n    const history = useHistory();\n    var url = props.url;\n    var name = props.name;\n    var color = props.color;\n    var available = props.available;\n    var seats = props.seats;\n    var rent = props.rent;\n    var btncolor = \"rgb(110, 96, 96)\";\n    if (available === false) {\n        btncolor = \"red\";\n    }\n    else {\n        btncolor = \"rgb(110, 96, 96)\";\n    }\n\n\n    return (\n        <div>\n            <Box mx=\"20vh\"  mt={2} ml={15} mr={15}>\n                <Container>\n                    <Grid container spacing={4} alignItems=\"center\">\n                        <Grid item >\n                            <Box >\n                                <img class=\"img\" alt=\"complex\" src={url} />\n                            </Box>\n                        </Grid>\n                        <Grid>\n                            <Grid item style={{ marginRight: \"17vw\" }} >\n                                <p class=\"carname\">\n                                    {name}\n                                </p>\n                            </Grid>\n                            <div class=\"cardicon\">\n                                <Grid container direction=\"row\" >\n                                    <Grid item>\n                                        <Colorize></Colorize>\n                                    </Grid>\n                                    <Grid item>\n                                        <span style={{ fontWeight: \"lighter\" }}>\n                                            {color}\n                                        </span>\n                                    </Grid>\n                                    <Grid item style={{ marginLeft: \"4vw\" }}>\n                                        <AirlineSeatReclineNormalIcon></AirlineSeatReclineNormalIcon>\n                                    </Grid>\n                                    <Grid item>\n                                        <span style={{ fontWeight: \"lighter\" }}>\n                                            {seats} seater\n                                        </span>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                        <Grid item style={{ marginRight: \"7vw\" }}>\n                            <p>₹ {rent}</p>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" disabled={!available} style={{ backgroundColor: btncolor, color: \"white\" }} onClick={()=>{\n                                history.push({\n                                    pathname: \"/form\",\n                                    state: { carprops: props }\n                                });\n                            }}>\n                                Book Now</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"outlined\" style={{ backgroundColor: \"white\", color: \"grey\" }} onClick={()=>{\n                                history.push({\n                                    pathname: \"/details\",\n                                    state: { carprops: props }\n                                });\n                            }}>\n                                Details</Button>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </div>\n    );\n\n}\nexport default CustomCard;","import React from \"react\";\nimport Twitter from \"@material-ui/icons/Twitter\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { Grid } from \"@material-ui/core\";\nconst Footer = () => {\n\n    return (\n        <div>\n            <div class=\"footer\">\n                <h2 > Rent Vroom </h2>\n                <p class=\"footertext\">\n                    RentVroom Pvt. ltd.\n            </p>\n                <p class=\"footertext\">\n                    No: 296, 3rd Cross Road, Jakkasandra, 1st Block, Kormangla\n            </p>\n                <p class=\"footertext\">\n                    Bengaluru, karnataka 560034\n            </p>\n            </div>\n            <Grid container direction=\"row\">\n                <Grid Item>\n                    <div class=\"footericon\">\n                        <Twitter></Twitter>\n                    </div>\n                </Grid>\n                <Grid Item>\n                    <div class=\"footericon\">\n                        <InstagramIcon></InstagramIcon>\n                    </div>\n                </Grid>\n                <Grid Item>\n                    <div class=\"footericon\">\n                        <LinkedInIcon></LinkedInIcon>\n                    </div>\n                </Grid>\n            </Grid>\n            <div >\n                <span class=\"bottomnav\">\n                    Home\n            </span>\n                <span class=\"bottomnav\" >\n                    Contact\n            </span>\n                <span class=\"bottomnav\">\n                    About\n            </span>\n                <span class=\"privacy\">\n                    Privacy Policy\n            </span>\n                <span class=\"tos\">\n                    Terms of service\n            </span>\n            </div>\n\n\n        </div>\n\n    );\n}\nexport default Footer","import React from \"react\";\n\n\nimport PageSplitter from \"../components/PageSplitter\"\nimport CardHead from \"../components/CardHeader\"\nimport CustomCard from \"../components/CustomCard\"\nimport Footer from \"../components/Footer\"\n\n\nimport \"../css/dashboard.css\"\n\nconst Dashboard = (props) => {\n    var list_cars = [{\n        \"url\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSDB-cL-RAxvDvp4cfrr9RNRfhC0irTC_s_rbF-xaiZDQbkvzTM&usqp=CAU\",\n        \"name\": \"Toyota Indus c\",\n        \"color\": \"White\",\n        \"seats\": \"4\",\n        \"rent\": \"250\",\n        \"available\": true,\n        \"vehicle_no\": \"gj 02 0202\",\n        \"fuel_type\": \"petrol\",\n        \"dis\": \"good car\",\n        \"booking\": []\n    },\n    {\n        \"url\": \"https://imgd.aeplcdn.com/370x208/cw/ec/35455/Hyundai-Venue-Right-Front-Three-Quarter-169804.jpg?wm=0&art=6\",\n        \"name\": \"Hyundai Venue\",\n        \"color\": \"blue\",\n        \"seats\": \"8\",\n        \"rent\": \"400\",\n        \"available\": true,\n        \"vehicle_no\": \"gj 01 0101\",\n        \"fuel_type\": \"petrol\",\n        \"dis\": \"better car\",\n        \"booking\": []\n    },\n    {\n        \"url\": \"https://stimg.cardekho.com/images/carexteriorimages/930x620/Tesla/Tesla-Model-S/4615/1551164231212/front-left-side-47.jpg\",\n        \"name\": \"Tesla Model S\",\n        \"color\": \"Red\",\n        \"seats\": \"4\",\n        \"rent\": \"9000\",\n        \"available\": true,\n        \"vehicle_no\": \"gj 03 0303\",\n        \"fuel_type\": \"Electric\",\n        \"dis\": \"excellent car\",\n        \"booking\": []\n    },\n    {\n        \"url\": \"https://static.autox.com/uploads/2020/04/Volkswagen-T-Cross-Image-1--500x261.jpg\",\n        \"name\": \"Volkswagen TC\",\n        \"color\": \"White\",\n        \"seats\": \"4\",\n        \"rent\": \"700\",\n        \"available\": true,\n        \"vehicle_no\": \"gj 04 0404\",\n        \"fuel_type\": \"Diesel\",\n        \"dis\": \"best car\",\n        \"booking\": []\n    }\n    ]\n\n    if (props.location.state != null) {\n        var bookings_list = props.location.state.booking;\n        for (var i = 0; i < bookings_list.length; i++) {\n            var car_name = props.location.state.booking[i].car_name;\n            for (var j = 0; j < list_cars.length; j++) {\n                if (list_cars[j][\"name\"] === car_name) {\n                    list_cars[j][\"available\"] = false;\n                }\n                list_cars[j][\"booking\"] = props.location.state.booking;\n\n            }\n        }\n    }\n\n    return (\n        <div>\n            <header>\n                <p>RENT</p>\n                <span>VROOM</span>\n            </header>\n            <PageSplitter></PageSplitter>\n            <CardHead></CardHead>\n            {list_cars.map((item) =>\n                <CustomCard\n                    url={item[\"url\"]}\n                    name={item[\"name\"]}\n                    color={item[\"color\"]}\n                    seats={item[\"seats\"]}\n                    rent={item[\"rent\"]}\n                    available={item[\"available\"]}\n                    vehicle_no={item[\"vehicle_no\"]}\n                    fuel_type={item[\"fuel_type\"]}\n                    dis={item[\"dis\"]}\n                    booking={item[\"booking\"]}\n                />\n\n            )}\n            <Footer></Footer>\n        </div>\n\n    );\n}\nexport default Dashboard;\n\n","import React, { useState } from \"react\";\n\nimport MuiPhoneInput from \"material-ui-phone-number\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Grid } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport \"date-fns\"\nimport Button from \"@material-ui/core/Button\"\nimport isAfter from \"date-fns/isAfter\"\nimport { useHistory} from \"react-router-dom\";\nimport { getDate, getMonth, getYear } from \"date-fns/\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport \"../css/form.css\"\n\n\nconst Form = (props) => {\n    const history = useHistory();\n   \n    const [selectedDate, setSelectedDate] = useState(new Date(\"2020-04-30\"));\n    const [selectedRDate, setSelectedRDate] = useState(new Date(\"2020-05-1\"));\n    const [phoneNumber, setPhoneNumber] = useState();\n    const [name, setName] = useState();\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n\n\n    };\n    const handlePhoneChange = (value) => {\n        if (value.length < 3)\n            setPhoneNumber(null);\n        else\n            setPhoneNumber(value);\n    }\n\n    const handleRDateChange = (date) => {\n        setSelectedRDate(date);\n\n    }\n\n    const handleNameChange = (name) => {\n        setName(name);\n    }\n\n    const Validate = () => {\n        if (name == null || phoneNumber == null) {\n            alert(\"Name or phone no. cannot be empty\");\n            return false;\n        }\n        else if (name.length === 0 || phoneNumber.length !== 15) {\n            alert(\"Invalid name or phone no.\")\n            return false;\n        }\n        var bool = isAfter(selectedRDate, selectedDate)\n        if (bool === false) {\n            alert(\"Return date invalid\")\n            return false\n        }\n        return true;\n    }\n\n\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            position: \"relative\",\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: \"2px solid black\",\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n    }));\n    const classes = useStyles();\n\n    function getModalStyle() {\n        const top = 50;\n        const left = 50;\n\n        return {\n            top: `${top}%`,\n            left: `${left}%`,\n            transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n    const SubmitForm = () => {\n        handleClose();\n        var list_months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        var issuedate = getDate(selectedDate) + \" \" + list_months[getMonth(selectedDate)] + \" \" + getYear(selectedDate);\n        var returndate = getDate(selectedRDate) + \" \" + list_months[getMonth(selectedRDate)] + \" \" + getYear(selectedRDate);\n        var booking = props.location.state.carprops.booking;\n        var dictionary = {\n            \"car_name\": props.location.state.carprops.name,\n            \"name\": name,\n            \"phone_no\": phoneNumber,\n            \"issue_date\": issuedate,\n            \"return_date\": returndate\n        };\n        booking.push(dictionary);\n        history.push({\n            pathname: \"/\",\n            state: {\n                \"booking\": booking\n            }\n        })\n    }\n\n    const BeginSubmitProcess = () => {\n        if (Validate()) {\n            //Routing\n            handleOpen(); \n        }\n        else {\n        }\n    }\n\n    return (\n        \n        <div>\n            \n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                disableBackdropClick={true}\n            >\n\n                <div style={modalStyle} class={classes.paper}>\n                    <h2 id=\"simple-modal-title\">Booking Confirmed!</h2>\n                    <p id=\"simple-modal-description\">\n                        You have booked : {props.location.state.carprops.name}\n                    </p>\n                    <p>\n                        For the Duration : {getDate(selectedDate) + \"/\" + (getMonth(selectedDate) + 1) + \"/\" + getYear(selectedDate)} - {getDate(selectedRDate) + \"/\" + (getMonth(selectedRDate) + 1) + \"/\" + getYear(selectedRDate)}\n                    </p>\n                    <Button onClick={SubmitForm} >\n                        continue\n                    </Button>\n                </div>\n            </Modal>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"stretch\" >\n                <Grid item direction=\"row\" >\n                    <div class=\"fimg\" />\n                </Grid>\n\n                <Grid item>\n                    <header style={{ whiteSpace: \"normal\", marginLeft: \"4vw\", marginTop: \"15vh\" }}>\n                        <span style={{ fontWeight: \"normal\", fontSize: \"xx-large\", marginRight: \"35vw\" }}> Booking details </span>\n                        <p style={{ color: \"black\" }}>RENT</p>\n                        <text style={{ display: \"inline-block\", color: \"cornflowerblue\" }}>VROOM</text>\n                    </header>\n                    <Grid item >\n                        <form action=\"submit\">\n                            <div class=\"ftext\">\n                                <div>\n                                    <TextField\n                                        id=\"name-field\"\n                                        required label=\"Name\"\n                                        placeholder=\"Jane Doe\"\n                                        value={name}\n                                        onChange={(event) => { handleNameChange(event.target.value) }}\n                                    />\n                                </div>\n                                <div class=\"cont_no\">\n\n                                    <MuiPhoneInput\n                                        id=\"phone-field\"\n                                        label=\"Contact Number\"\n                                        required defaultCountry=\"in\"\n                                        onlyCountries={[\"in\"]}\n                                        regions={\"asia\"}\n                                        value={phoneNumber}\n                                        onChange={(value) => { handlePhoneChange(value) }}\n                                    />\n                                </div>\n                            </div>\n                            <div class=\"fdate\" >\n                                <div>\n                                    <Grid item >\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardDatePicker\n                                                required\n                                                margin=\"normal\"\n                                                id=\"date-picker-dialog-i\"\n                                                label=\"Issue Date\"\n                                                value={selectedDate}\n                                                autoOk\n                                                onChange={(value) => { handleDateChange(value) }}\n                                                format=\"dd/MM/yyyy\"\n                                                KeyboardButtonProps={{\n                                                    \"aria-label\": \"change date\",\n                                                }}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </Grid>\n                                </div>\n                                <div class=\"rdate\">\n                                    <Grid item >\n                                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                            <KeyboardDatePicker\n                                                required\n                                                margin=\"normal\"\n                                                id=\"date-picker-dialog-r\"\n                                                label=\"Return Date\"\n                                                value={selectedRDate}\n                                                onChange={handleRDateChange}\n                                                autoOk\n                                                format=\"dd/MM/yyyy\"\n                                                KeyboardButtonProps={{\n                                                    \"aria-label\": \"change date\",\n                                                }}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </Grid>\n                                </div>\n                            </div>\n\n\n                            <div class=\"fdate\">\n                                <div>\n                                    <Button href=\"/\">Back</Button>\n                                </div>\n                                <div class=\"bcar\">\n                                    <Button variant=\"contained\" onClick={BeginSubmitProcess} style={{ backgroundColor: \"rgb(110, 96, 96)\", color: \"white\" }}>Book Car</Button>\n                                </div>\n                            </div>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\nexport default Form;","import React from \"react\";\n\nimport { Grid, Box, Paper } from \"@material-ui/core\";\nimport Colorize from \"@material-ui/icons/Colorize\";\nimport AirlineSeatReclineNormalIcon from \"@material-ui/icons/AirlineSeatReclineNormal\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"../css/details.css\"\n\nconst Dcard = (props) => {\n    const history = useHistory();\n    var url = props.url;\n    var name = props.name;\n    var color = props.color;\n    var available = props.available;\n    var seats = props.seats;\n    var rent = props.rent;\n    var avail_text\n    if (available){\n        avail_text = \"available\"\n    }\n    else{\n        avail_text = \"not Available\";\n    }\n\n    return(\n        <Box mx=\"38vh\" borderRadius={10} >\n                <Paper>\n                    <Grid container spacing={3} alignItems=\"flex=start\">\n                        <Box>\n                            <Grid item>\n                                <img class=\"dimg\" alt=\"carimage\" src={url} />\n                            </Grid>\n                        </Box>\n                        <Grid >\n                            <Grid>\n                                <p class=\"dcarname\">\n                                    {name}\n                            </p>\n                                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                                    <div class=\"dcardicon\">\n                                        <Grid item>\n                                            <Colorize></Colorize>\n                                        </Grid>\n                                        <Grid item>\n                                            <span style={{ fontWeight: \"lighter\" }}>\n                                                {color}\n                                    </span>\n                                        </Grid>\n                                        <Grid item style={{ marginLeft: \"1vw\" }}>\n                                            <AirlineSeatReclineNormalIcon></AirlineSeatReclineNormalIcon>\n                                        </Grid>\n                                        <Grid item>\n                                            <span style={{ fontWeight: \"lighter\" }}>\n                                                {seats} seater\n                                    </span>\n                                        </Grid>\n                                    </div>\n                                </Grid>\n                                <p class=\"drent\">\n                                    Rent per day : ₹ {rent}\n                            </p>\n                                <Button variant=\"contained\" disabled={!available} style={{ backgroundColor: \"rgb(110, 96, 96)\", color: \"white\" }} onClick={()=>{\n                                    history.push({\n                                        pathname: \"/form\",\n                                        state:{ carprops: props}\n                                    })\n                                }}>Book Now</Button>\n                                <span class=\"cavail\">\n                                    {\n                                        avail_text\n                                    }\n                            </span>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n\n                </Paper>\n            </Box>\n    );\n\n }\nexport default Dcard","import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst DCinfo = (props) => {\n    var vehicle_no=props.vehicle_no\n    var fuel_type = props.fuel_type\n    var dis = props.dis\n    var available = props.available\n    var avail_text \n    var Icon\n    if(available){\n        avail_text = \"available\"\n        Icon = <CheckIcon></CheckIcon>\n    }\n    else{\n        avail_text = \"Not Available\"\n        Icon = <ClearIcon></ClearIcon>\n    }\n\n\n    return (\n        <div>\n            <div>\n                <span style={{ fontSize: \"4vh\", marginLeft: \"3vw\", color: \"grey\" }}>\n                    Cars Details\n                </span >\n                <Divider style={{ marginTop: \"3vh\" }} />\n            </div>\n            <div style={{ fontSize: \"4vh\", marginLeft: \"3vw\", color: \"grey\", marginTop: \"2vh\" }}>\n                <Button variant=\"contained\" disabled color={\"rgb(110, 96, 96)\"}\n                    endIcon={Icon}\n                    style={{ backgroundColor: \"rgb(110, 96, 96)\", color: \"white\" }}>\n                    {avail_text}\n                    </Button>\n            </div>\n            <div style={{ marginLeft: \"3vw\", marginTop: \"5vh\" }}>\n                <p>\n                    Vehicle Number : {vehicle_no}\n                </p>\n                <p>\n                    Fuel Type : {fuel_type}\n                </p>\n                <p>\n                    Engine Details : {fuel_type + \" engine\"}\n                    </p>\n                <p>\n                    More Description : {dis}\n                    </p>\n            </div>\n        </div>\n\n    );\n}\nexport default DCinfo\n","import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n\nconst CurrBooking = (props) => {\n    var Name = props.name;\n    var Phone = props.phone;\n    var Idate = props.Idate;\n    var Rdate = props.Rdate;\n\n\n    return (\n        <div>\n            <div style={{ marginTop: \"10vh\" }}>\n                <span style={{ fontSize: \"4vh\", marginLeft: \"3vw\", color: \"grey\" }}>\n                    Current Booking\n                </span>\n                <Divider style={{ marginTop: \"3vh\" }} />\n            </div>\n            <div style={{ marginLeft: \"3vw\", marginRight: \"3vw\" }}>\n                <TableContainer>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell align=\"center\">Phone Number</TableCell>\n                                <TableCell align=\"center\">Issue Date</TableCell>\n                                <TableCell align=\"center\">Return date</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow key={Name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                        {Name}\n                                </TableCell>\n                                <TableCell align=\"center\">{Phone}</TableCell>\n                                <TableCell align=\"center\">{Idate}</TableCell>\n                                <TableCell align=\"center\">{Rdate}</TableCell>\n                                </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    );\n\n}\n\nexport default CurrBooking","import React from \"react\";\n\n\n\nimport Footer from \"../components/Footer.js\"\nimport Dcard from \"../components/Dcard\"\nimport DCinfo from \"../components/DCinfo\"\nimport CurrBooking from \"../components/CurrBooking\"\n\nimport \"../css/details.css\"\n\nconst Details = (props) => {\n    var cname = props.location.state.carprops.name;\n    var url = props.location.state.carprops.url;\n    var color = props.location.state.carprops.color;\n    var available = props.location.state.carprops.available;\n    var seats = props.location.state.carprops.seats;\n    var rent = props.location.state.carprops.rent;\n    var vehicle_no = props.location.state.carprops.vehicle_no;\n    var fuel_type = props.location.state.carprops.fuel_type;\n    var dis = props.location.state.carprops.dis;\n    var booking = props.location.state.carprops.booking;\n\n    var name;\n    var phone_no;\n    var issue_date;\n    var return_date;\n\n    var match = false;\n    for(var i = 0;i<booking.length;i++){\n        var car_name = booking[i].car_name;\n        if(cname===car_name){\n            match = true;\n            name = booking[i][\"name\"];\n            phone_no = booking[i][\"phone_no\"];\n            issue_date = booking[i][\"issue_date\"];\n            return_date = booking[i][\"return_date\"];\n            break;\n        }\n    }\n\n    if(booking.length===0 || match===false){\n        name = \"\";\n        phone_no = \"\";\n        issue_date = \"\";\n        return_date = \"\";\n    }\n    return (\n        <div>\n            <header>\n                <p>RENT</p>\n                <span>VROOM</span>\n            </header>\n\n            <Dcard\n                url={url}\n                name={cname}\n                color={color}\n                seats={seats}\n                rent={rent}\n                available={available}\n                booking={booking}\n            />\n\n            <div style={{ marginTop: \"10vh\" }}>\n                <DCinfo\n                    vehicle_no={vehicle_no}\n                    fuel_type={fuel_type}\n                    dis={dis}\n                    available={available}\n                />\n                <CurrBooking\n                    name={name}\n                    phone={phone_no}\n                    Idate={issue_date}\n                    Rdate={return_date}\n                />\n            </div>\n            <Footer>\n            </Footer>\n        </div>\n\n    );\n\n}\nexport default Details;","import React from \"react\";\nimport Dashboard from \"./pages/Dashboard\"\nimport Form from \"./pages/Form\"\nimport Details from \"./pages/Details\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route >\n          <Route exact path={process.env.PUBLIC_URL + \"/\"} component={Dashboard} />\n          <Route exact path={process.env.PUBLIC_URL + \"/form\"} component={Form} />\n          <Route exact path={process.env.PUBLIC_URL + \"/details\"} component={Details} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}